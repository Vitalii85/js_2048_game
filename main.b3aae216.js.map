{"version":3,"sources":["scripts/main.js"],"names":["score","gameField","button","document","querySelector","gameScore","field","startGame","classList","remove","add","removeEventListener","addEventListener","newGame","innerHTML","game","e","action","code","lines","randomCell","updateField","win","lose","updateScore","i","j","rows","cells","className","row","column","number","Math","floor","random","isEmptyCell","includes","canMerge","mergeCells","prevCell","cell","moveCells","columns","direction","line","push","mergeLine","moveLine","merged","moved"],"mappings":"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","file":"main.b3aae216.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet score;\nlet gameField;\nconst button = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst field = document.querySelector('.game-field');\n\nbutton.addEventListener('click', startGame);\n\nfunction startGame() {\n  button.classList.remove('start');\n  button.classList.add('restart');\n  document.querySelector('.message-start').classList.add('hidden');\n  button.removeEventListener('click', startGame);\n  button.addEventListener('click', newGame);\n  button.innerHTML = 'Restart';\n  newGame();\n}\n\nfunction game(e) {\n  let action;\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      action = lines([0, 1, 2, 3], [0, 1, 2, 3], 'horizontal');\n      break;\n    case 'ArrowRight':\n      action = lines([0, 1, 2, 3], [3, 2, 1, 0], 'horizontal');\n      break;\n    case 'ArrowUp':\n      action = lines([0, 1, 2, 3], [0, 1, 2, 3], 'vertical');\n      break;\n    case 'ArrowDown':\n      action = lines([3, 2, 1, 0], [0, 1, 2, 3], 'vertical');\n      break;\n  }\n\n  if (action) {\n    randomCell();\n    updateField();\n    win();\n    lose();\n  }\n}\n\nfunction newGame() {\n  gameField = [\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n    ['', '', '', ''],\n  ];\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n  score = 0;\n  updateScore();\n  randomCell();\n  randomCell();\n  updateField();\n  document.addEventListener('keydown', game);\n}\n\nfunction updateScore() {\n  gameScore.innerHTML = score;\n}\n\nfunction updateField() {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      field.rows[i].cells[j].innerHTML = gameField[i][j];\n\n      field.rows[i].cells[j].className\n        = `field-cell field-cell--${gameField[i][j]}`;\n    }\n  }\n}\n\nfunction randomCell() {\n  let row;\n  let column;\n  let number;\n\n  do {\n    row = Math.floor(Math.random() * 4);\n    column = Math.floor(Math.random() * 4);\n  } while (!isEmptyCell([row, column]));\n\n  if (Math.floor(Math.random() * 10) === 9) {\n    number = 4;\n  } else {\n    number = 2;\n  }\n\n  gameField[row][column] = number;\n}\n\nfunction win() {\n  for (const row of gameField) {\n    if (row.includes(2048)) {\n      document.removeEventListener('keydown', game);\n      document.querySelector('.message-win').classList.remove('hidden');\n    }\n  }\n}\n\nfunction lose() {\n  for (const row of gameField) {\n    if (row.includes('')) {\n      return;\n    }\n  }\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (canMerge([i, j], [i, j + 1])\n        || canMerge([j, i], [j + 1, i])) {\n        return;\n      }\n    }\n  }\n\n  document.removeEventListener('keydown', game);\n  document.querySelector('.message-lose').classList.remove('hidden');\n}\n\nfunction mergeCells(prevCell, cell) {\n  const number = gameField[cell[0]][cell[1]] * 2;\n\n  gameField[prevCell[0]][prevCell[1]] = number;\n  gameField[cell[0]][cell[1]] = '';\n  score += number;\n  updateScore();\n}\n\nfunction moveCells(prevCell, cell) {\n  gameField[prevCell[0]][prevCell[1]] = gameField[cell[0]][cell[1]];\n  gameField[cell[0]][cell[1]] = '';\n}\n\nfunction isEmptyCell(cell) {\n  if (gameField[cell[0]][cell[1]] === '') {\n    return true;\n  }\n\n  return false;\n}\n\nfunction canMerge(prevCell, cell) {\n  if (gameField[prevCell[0]][prevCell[1]] === gameField[cell[0]][cell[1]]) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction lines(rows, columns, direction) {\n  let action = false;\n\n  for (let i = 0; i < 4; i++) {\n    const line = [];\n\n    for (let j = 0; j < 4; j++) {\n      let cell;\n\n      switch (direction) {\n        case 'horizontal':\n          cell = [rows[i], columns[j]];\n          break;\n        case 'vertical':\n          cell = [rows[j], columns[i]];\n          break;\n      }\n\n      line.push(cell);\n    }\n\n    action = mergeLine(line) ? true : action;\n    action = moveLine(line) ? true : action;\n  }\n\n  return action;\n}\n\nfunction mergeLine(line) {\n  let merged = false;\n  let cell;\n  let prevCell = null;\n\n  for (let i = 0; i < 4; i++) {\n    cell = line[i];\n\n    if (isEmptyCell(cell)) {\n      continue;\n    }\n\n    if (prevCell) {\n      if (canMerge(prevCell, cell)) {\n        mergeCells(prevCell, cell);\n        merged = true;\n        prevCell = null;\n      } else {\n        prevCell = cell;\n      }\n    } else {\n      prevCell = cell;\n    }\n  }\n\n  return merged;\n}\n\nfunction moveLine(line) {\n  let moved = false;\n  let cell;\n  let prevCell;\n  let i = 1;\n\n  while (i < 4) {\n    if (i === 0) {\n      i++;\n    }\n\n    cell = line[i];\n\n    if (isEmptyCell(cell)) {\n      i++;\n      continue;\n    }\n\n    prevCell = line[i - 1];\n\n    if (isEmptyCell(prevCell)) {\n      moveCells(prevCell, cell);\n      moved = true;\n      i--;\n    } else {\n      i++;\n    }\n  }\n\n  return moved;\n}\n"]}